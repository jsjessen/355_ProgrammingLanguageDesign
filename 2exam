Exam 2 Review Notes
===================

Can have a cheetsheet!

1) Types and type sub-language

    determine type of ML thing
    write int*bool instead of tuple

    What is the type of (5, [3], true)?
    Ans: int*int list*bool (is tuple, but don't write tuple)

    What is the ML type of f after the declaration?
    fun f (x, y) = x + y (not curried form)
    Ans: int*int->int

    What is the type of the function defined by:
    fun f x = x + 1  (in curried form)
    int->int
    We know the result is an int because of "+ 1" where 1 is an int 

    What is the type of the function defined by:
    fun (x,y) = (x+1, y+1) (not curried form, so input parameter is a tuple)
    int*int->int*int

    What is the type of the function defined by:
    fun f x y = (x+1, y+1) (curried form)
    int->int->int*int

    Understand the differnce of type between a function in curried and not-curried form!

    What is the type of the function defined by:
    fun f x y = (x y)  (there is no comma, what does it mean?) 
    f x is application of function f on x
    x y is the application of function x on y
    ('a->'b)->'a->'b
        x      y  result
    we don't know y so use 'a
    but we know x is a function applied to y, where y is 'a
    we don't know what function x maps to, so we use 'b
    fun f x y = (y x) would result in an error because you get the function before the argument 

    What is the type of the function defined by:
    fun f (x,y) = (x (y 2))
    ('a->'b)*(int->'a)->'b
        x   ,     y     result

    If function is in curried form with N input arguements, there are N mappings in the type

    fun f x y z = (x y) (z 2)
    ('a->'b->'c)->'a->(int->'b)->'c
          x        y      z      result

    fun f x y = x (y [])
    ('a->'b)->('c list->'a)->'b
        x              y     result
    y takes a list and returns something 'a
    x takes the something 'a y returns

    Understand anonymous function.
    It will be applied to int, see what it returns

    e) A multiple choice question related to a general property of a tuple.
    f) A multiple choice question related to a general property of a list.

2) Function on a given datatype

    Give a definition for a function listify having type ____, that returns ___ of ___.

    Understand the examples given in the datatype slides

3) ML list processing

    "An ML list such as [(1,4), (14,5), (7,3), ... ] can be used to represent a lookup table where the first value of each pair is the key and the second value is the associated value." - the test

    Define an ML function that returns ___ if ___ and returns ___ if ___.

4) Parsing

    a) Draw a derivation tree of the sentence
       __________

       using the grammar given below. Assume that <e> is the start symbol. 
       
       It will be prefix notation.
       Just look at substitution rules and apply them.

       Noe that the arithmetic here is expressed in prefix notation so (- 3 10) is -7, (* 2 3) is 6, etc.

       Meticulously and mindlessly apply the grammar

       <e> -> <mulop> <e> <t> | <t>
       <mulop> -> * | /
       ...
       ...

    b) Using the tree you have drawn above determine the value of the expression _____ according to this grammar. Show how you derived your answer (start from beginning, put parenthesis).

5) Scheme

    "An Scheme list such as [(1,4), (14,5), (7,3), ... ] can be used to represent a lookup table where the first value of each pair is the key and the second value is the associated value." - the test (Same as ML question but in Scheme)

    b) Define a Scheme function that returns ___ if ___ and returns ___ if ___. 

        Understand general functions such as map and fold.

6) ML function

    You are given an ML function defined as:

    ___________________


        Will be in curried form.
        The first argument will be a function (like add or map)


    a) What is the ML type of the function?

            Be able to figure out the type of a function that is recursively called, such as map or fold.

    b) Using the given function define a function that returns _______.

            Using given function, write helper function that returns another function.
            (like increment, max)

            < Example: Add function >

    c) Using the given function define a function that returns _______.

            Define a new function using the general function defined in (b)

            < Example:  Function that adds all elements of a list >

    d) Is the function defined in question 6 tail-recursive? Why or why not?
            

